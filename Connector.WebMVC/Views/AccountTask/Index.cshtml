@model IEnumerable<Connector.Models.AccountTaskModels.AccountTaskListItem>

@{
    ViewBag.Title = "Index";
}
<div class="d-flex justify-content-between my-5">
    <h2>Tasks:</h2>
    @Html.ActionLink("Create New +", "Create", null, htmlAttributes: new { @class = "btn btn-outline-light" })
</div>
@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SaveResult"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
<table class="table text-light mb-5">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TaskId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerAccount)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        if (!item.Completed)
        {
<tr>
    <td>
        @Html.DisplayFor(modelItem => item.TaskId)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.Description)
    </td>
    <td>
        @Html.DisplayFor(modelItem => item.CustomerAccount.Name)
    </td>
    <td>
        @Html.ActionLink("View Account", "Details", "CustomerAccount", new { id = item.CustomerAccountId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
        @Html.ActionLink("Mark Complete", "ToggleTask", new { id = item.TaskId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.TaskId }, htmlAttributes: new { @class = "btn btn-outline-light" })
    </td>
</tr>
        }
    }
</table>

<h2 class="mt-5">Completed Tasks</h2>
<table class="table text-light">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.TaskId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CustomerAccount)
        </th>
        <th>
            Actions
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item.Completed)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TaskId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerAccount.Name)
                </td>
                <td>
                    @Html.ActionLink("View Account", "Details", "CustomerAccount", new { id = item.CustomerAccountId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
                    @Html.ActionLink("Mark Incomplete", "ToggleTask", new { id = item.TaskId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.TaskId }, htmlAttributes: new { @class = "btn btn-outline-light" })
                </td>
            </tr>
        }
    }
</table>
