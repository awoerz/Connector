@model IEnumerable<Connector.Models.ContactListItem>
@{
    ViewBag.Title = "Contacts";
}

<div class="d-flex justify-content-between my-5">
    <h2>Contacts</h2>
    @Html.ActionLink("Create New +", "Create", null, htmlAttributes: new { @class = "btn btn-outline-light"})
</div>
@if (TempData.ContainsKey("SaveResult"))
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SaveResult"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}



<div class="container d-flex flex-wrapmy-5">
    <div class="row g-3" style="width: 100%">
        @foreach (var item in Model)
        {
            <div class="col-3 col-sm-12 col-md-6 col-lg-4 col-xl-3 my-4">
                <div class="card accent-color">
                    <div class="card-body my-3">
                        <h5>@Html.DisplayFor(modelItem => item.Name)</h5>
                        <p class="card-text">
                            <i class="bi bi-envelope"></i> @Html.DisplayFor(modelItem => item.Email)<br />
                        <i class="bi bi-phone"></i> @Html.DisplayFor(modelItem => item.PhoneNumber)<br />
                        </p>
                        <p>
                        Preferred Contact Method:<br />
                        @Html.DisplayFor(modelItem => item.MyProperty)</p>

                        @Html.ActionLink("Edit", "Edit", new { id = item.ContactId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ContactId }, htmlAttributes: new { @class = "btn btn-outline-light" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ContactId }, htmlAttributes: new { @class = "btn btn-outline-light" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>